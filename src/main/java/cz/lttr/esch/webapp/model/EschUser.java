package cz.lttr.esch.webapp.model;
// Generated 1.2.2016 7:18:36 by Hibernate Tools 4.3.1.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * EschUser generated by hbm2java
 */
@Entity
@Table(name="esch_user"
    ,catalog="esch"
    , uniqueConstraints = {@UniqueConstraint(columnNames="email"), @UniqueConstraint(columnNames="login")} 
)
public class EschUser  implements java.io.Serializable {


     private int id;
     private Instructor instructor;
     private String login;
     private String password;
     private String firstName;
     private String lastName;
     private String email;
     private Date registrationDate;
     private Date lastactivityDate;
     private Character locked;
     private Set<Event> events = new HashSet<Event>(0);

    public EschUser() {
    }

	
    public EschUser(int id, String login, String email) {
        this.id = id;
        this.login = login;
        this.email = email;
    }
    public EschUser(int id, Instructor instructor, String login, String password, String firstName, String lastName, String email, Date registrationDate, Date lastactivityDate, Character locked, Set<Event> events) {
       this.id = id;
       this.instructor = instructor;
       this.login = login;
       this.password = password;
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.registrationDate = registrationDate;
       this.lastactivityDate = lastactivityDate;
       this.locked = locked;
       this.events = events;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="instructor_id")
    public Instructor getInstructor() {
        return this.instructor;
    }
    
    public void setInstructor(Instructor instructor) {
        this.instructor = instructor;
    }

    
    @Column(name="login", unique=true, nullable=false, length=30)
    public String getLogin() {
        return this.login;
    }
    
    public void setLogin(String login) {
        this.login = login;
    }

    
    @Column(name="password", length=50)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="first_name", length=30)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="last_name", length=30)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="email", unique=true, nullable=false, length=50)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="registration_date", length=19)
    public Date getRegistrationDate() {
        return this.registrationDate;
    }
    
    public void setRegistrationDate(Date registrationDate) {
        this.registrationDate = registrationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastactivity_date", length=19)
    public Date getLastactivityDate() {
        return this.lastactivityDate;
    }
    
    public void setLastactivityDate(Date lastactivityDate) {
        this.lastactivityDate = lastactivityDate;
    }

    
    @Column(name="locked", length=1)
    public Character getLocked() {
        return this.locked;
    }
    
    public void setLocked(Character locked) {
        this.locked = locked;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="eschUser")
    public Set<Event> getEvents() {
        return this.events;
    }
    
    public void setEvents(Set<Event> events) {
        this.events = events;
    }




}


