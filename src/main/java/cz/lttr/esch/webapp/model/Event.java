package cz.lttr.esch.webapp.model;
// Generated 1.2.2016 7:18:36 by Hibernate Tools 4.3.1.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Event generated by hbm2java
 */
@Entity
@Table(name="event"
    ,catalog="esch"
    , uniqueConstraints = @UniqueConstraint(columnNames="name") 
)
public class Event  implements java.io.Serializable {


     private Integer id;
     private EschUser eschUser;
     private String name;
     private Date startDate;
     private Date endDate;
     private Date created;
     private Set<EventConfiguration> eventConfigurations = new HashSet<EventConfiguration>(0);
     private Set<Instructor> instructors = new HashSet<Instructor>(0);
     private Set<ProgramDay> programDays = new HashSet<ProgramDay>(0);

    public Event() {
    }

	
    public Event(Date created) {
        this.created = created;
    }
    public Event(EschUser eschUser, String name, Date startDate, Date endDate, Date created, Set<EventConfiguration> eventConfigurations, Set<Instructor> instructors, Set<ProgramDay> programDays) {
       this.eschUser = eschUser;
       this.name = name;
       this.startDate = startDate;
       this.endDate = endDate;
       this.created = created;
       this.eventConfigurations = eventConfigurations;
       this.instructors = instructors;
       this.programDays = programDays;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="esch_user_id")
    public EschUser getEschUser() {
        return this.eschUser;
    }
    
    public void setEschUser(EschUser eschUser) {
        this.eschUser = eschUser;
    }

    
    @Column(name="name", unique=true, length=40)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="start_date", length=10)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="end_date", length=10)
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", nullable=false, length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="event")
    public Set<EventConfiguration> getEventConfigurations() {
        return this.eventConfigurations;
    }
    
    public void setEventConfigurations(Set<EventConfiguration> eventConfigurations) {
        this.eventConfigurations = eventConfigurations;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="event_instructors", catalog="esch", joinColumns = { 
        @JoinColumn(name="event_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="instructor_id", nullable=false, updatable=false) })
    public Set<Instructor> getInstructors() {
        return this.instructors;
    }
    
    public void setInstructors(Set<Instructor> instructors) {
        this.instructors = instructors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="event")
    public Set<ProgramDay> getProgramDays() {
        return this.programDays;
    }
    
    public void setProgramDays(Set<ProgramDay> programDays) {
        this.programDays = programDays;
    }




}


